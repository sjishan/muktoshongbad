{
  "name": "crcaptcha",
  "description": "Show and check the Civil Rights Captcha",
  "version": "1.0.1",
  "author": {
    "name": "Ola HolmstrÃ¶m",
    "email": "olaholmstrom+github@gmail.com"
  },
  "keywords": [
    "captcha"
  ],
  "main": "./lib/crcaptcha.js",
  "repository": {
    "type": "git",
    "url": "http://github.com/olahol/node-crcaptcha.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/olahol/node-crcaptcha/raw/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "node-crcaptcha\n==============\n\nRenders and checks the [Civil Rights Captcha](http://captcha.civilrightsdefenders.org/).\n\nInstallation\n------------\n\n    $ npm install crcaptcha\n\nLibrary\n-------\n\n### crcaptcha.show(callback(err, captchaHtml), lang = en)\nRequests a captcha form. The two languages currently supported are Swedish (sv)\nand English (en.)\n\n* * *\n\n### crcaptcha.check(code, sessid, callback(err, success))\n\nVerify a captcha.\n\nExample using [Express](http://www.expressjs.com)\n-------------------------------------------------\n\napp.js:\n\n    var express = require(\"express\")\n        , http = require(\"http\")\n        , crc = require(\"../lib/crcaptcha\");\n\n    var app = express();\n\n    app.configure(function(){\n        app.set(\"port\", process.env.PORT || 3000);\n        app.set(\"views\", __dirname + \"/views\");\n        app.set(\"view engine\", \"jade\");\n        app.use(express.favicon());\n        app.use(express.logger(\"dev\"));\n        app.use(express.bodyParser());\n        app.use(express.methodOverride());\n        app.use(app.router);\n    });\n\n    app.configure(\"development\", function(){\n        app.use(express.errorHandler());\n    });\n\n    app.get(\"/\", function(req, res) {\n        crc.show(function (err, html) {\n            if (err) {\n                console.log(err);\n            } else {\n                res.render(\"form\", { captcha: html });\n            }\n        });\n    });\n\n    app.post(\"/\", function (req, res) {\n        crc.check(req.body.crc_captcha, req.body.crc_sessid, function (err, success) {\n            if (err) {\n                console.log(err);\n            } else {\n                if (success) {\n                    res.send(\"Right.\");\n                } else {\n                    res.send(\"Wrong.\");\n                }\n            }\n        });\n    });\n\n    http.createServer(app).listen(app.get(\"port\"), function(){\n        console.log(\"Express server listening on port \" + app.get(\"port\"));\n    });\n\nviews/form.jade:\n\n    !!! 5\n    html\n      head\n        script(src=\"http://code.jquery.com/jquery-latest.min.js\", type=\"text/javascript\")\n      body\n        form(method='POST', action='/')\n          != captcha\n          input(type='submit', value='Check Civil Rights Captcha')\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/olahol/node-crcaptcha/issues"
  },
  "homepage": "https://github.com/olahol/node-crcaptcha",
  "_id": "crcaptcha@1.0.1",
  "_from": "crcaptcha@~1.0.1"
}
